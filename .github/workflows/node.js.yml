# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            TF_DIRS: "./Infrastructure_As_Code/security_vpc ./Infrastructure_As_Code/frontend_vpc" # Define your Terraform directories here

        steps:
            - uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: "14"

            - name: Install Dependencies
              run: npm install

            - name: tests
              run: ls -a

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v1
              with:
                  terraform_version: "latest"

            - name: Run Terraform Format in Specific Directories
              run: |
                  for dir in $TF_DIRS; do
                    terraform fmt $dir
                  done

            - name: Check for changes in Presentation
              id: check_changes
              run: |
                  echo "::set-output name=changed::$(git diff --name-only HEAD^ HEAD | grep -q 'closing_presentation.md' && echo 'true' || echo 'false')"

            - name: Generate Presentation PDF
              if: steps.check_changes.outputs.changed == 'true'
              run: npx @marp-team/marp-cli@closing_presentation.md -o presentation.pdf
